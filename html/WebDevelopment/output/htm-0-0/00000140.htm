<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:w="urn:schemas-microsoft-com:office:word" xmlns="http://www.w3.org/TR/REC-html40">
          <head>
          </head>
          <body>
            <xsl:element name="p">
              <xsl:if test="msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:FirstAuthor">
                <xsl:call-template name="templ_prop_OpenBracket"/>
              </xsl:if>

              <xsl:if test="msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:PagePrefix">
                <xsl:value-of select="/b:Citation/b:PagePrefix"/>
              </xsl:if>

              <xsl:variable name="type">
                <xsl:value-of select="msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:SourceType"/>
              </xsl:variable>

              <xsl:variable name="showTitle">
                <xsl:if test="not(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:NoTitle) and (string-length(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:ShortTitle)>0 or string-length(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Title)>0)">
                  <xsl:text>yes</xsl:text>
                </xsl:if>
              </xsl:variable>


              <xsl:variable name="authorMain">
                <xsl:value-of select="msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Author/b:Main"/>
              </xsl:variable>

              <xsl:variable name="displayedAuthor">
                <xsl:if test="string-length($authorMain)>0">
                  <xsl:text>yes</xsl:text>
                </xsl:if>
              </xsl:variable>

              <xsl:variable name="title">
                <xsl:if test="string-length(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:ShortTitle)=0">
                  <xsl:value-of select="msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Title"/>
                </xsl:if>
                <xsl:if test="string-length(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:ShortTitle)>0">
                  <xsl:value-of select="msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:ShortTitle"/>
                </xsl:if>
              </xsl:variable>


              <xsl:if test="string-length($title)=0 and string-length($authorMain)=0 and string-length(b:Year)=0">
                <xsl:value-of select="msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Tag"/>
              </xsl:if>


              <xsl:choose>
                <xsl:when test="msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:NoAuthor or $displayedAuthor!='yes'">
                  <xsl:choose>
                    <xsl:when test="string-length($showTitle)>0 and ($type='DocumentFromInternetSite' or $type='InternetSite' or $type='ElectronicSource')">
                      <xsl:call-template name="templ_prop_OpenQuote"/>
                      <xsl:value-of select="$title"/>
                      <xsl:call-template name="templ_prop_CloseQuote"/>
                    </xsl:when>
                    <xsl:when test="string-length($showTitle)>0 and ($type='Book' or $type='BookSection' or $type='JournalArticle' or $type='ArticleInAPeriodical' or $type='ConferenceProceedings' or $type='Report')">
                      <i>
                        <xsl:value-of select="$title"/>
                      </i>
                    </xsl:when>
                    <xsl:when test="string-length($showTitle)>0">
                      <xsl:value-of select="$title"/>
                    </xsl:when>
                  </xsl:choose>
                </xsl:when>

                <xsl:otherwise>



                  <xsl:if test="msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:NonUniqueMiddle">

                    <xsl:if test="string-length(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Author/b:Main/b:NameList/b:Person[1]/b:First)>0">
                      <xsl:value-of select="msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Author/b:Main/b:NameList/b:Person[1]/b:First"/>
                      <xsl:call-template name="templ_prop_Space"/>
                    </xsl:if>
                  </xsl:if>

                  <xsl:if test="msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:NonUniqueLastName">
                    <xsl:if test="string-length(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Author/b:Main/b:NameList/b:Person[1]/b:Middle)>0">
                      <xsl:value-of select="msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Author/b:Main/b:NameList/b:Person[1]/b:Middle"/>
                      <xsl:call-template name="templ_prop_Space"/>
                    </xsl:if>
                  </xsl:if>

                  <xsl:if test="string-length(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Author/b:Main/b:NameList/b:Person[1]/b:Last)>0">
                    <xsl:value-of select="msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Author/b:Main/b:NameList/b:Person[1]/b:Last"/>
                  </xsl:if>

                  <xsl:choose>
                    <xsl:when test="string-length(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Author/b:Main/b:NameList/b:Person[3]/b:Last)>0">
                      <xsl:call-template name="templ_prop_ListSeparator"/>
                      <xsl:value-of select="msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Author/b:Main/b:NameList/b:Person[2]/b:Last"/>
                      <xsl:call-template name="templ_prop_Space"/>
                      <xsl:call-template name="templ_str_AndUnCap"/>
                      <xsl:call-template name="templ_prop_Space"/>
                      <xsl:value-of select="msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Author/b:Main/b:NameList/b:Person[3]/b:Last"/>
                    </xsl:when>
                    <xsl:when test="string-length(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Author/b:Main/b:NameList/b:Person[2]/b:Last)>0">
                      <xsl:call-template name="templ_prop_Space"/>
                      <xsl:call-template name="templ_str_AndUnCap"/>
                      <xsl:call-template name="templ_prop_Space"/>
                      <xsl:value-of select="msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Author/b:Main/b:NameList/b:Person[2]/b:Last"/>
                    </xsl:when>
                  </xsl:choose>

                  <xsl:if test="msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:DoAndOther">
                    <xsl:call-template name="templ_prop_Space"/>
                    <xsl:call-template name="templ_str_AndOthersUnCap"/>
                  </xsl:if>

                  <xsl:if test="msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:RepeatedAuthor and (string-length(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:ShortTitle)>0 or (string-length(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Title)>0 and not(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:NoTitle)))">
                    <xsl:if test="string-length($showTitle) and string-length(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Author/b:Main/b:NameList/b:Person[1]/b:Last)>0">
                      <xsl:call-template name="templ_prop_ListSeparator"/>
                    </xsl:if>
                    <xsl:choose>
                      <xsl:when test="string-length($showTitle)>0 and ($type='DocumentFromInternetSite' or $type='InternetSite' or $type='ElectronicSource')">
                        <xsl:call-template name="templ_prop_OpenQuote"/>
                        <xsl:value-of select="$title"/>
                        <xsl:call-template name="templ_prop_CloseQuote"/>
                      </xsl:when>
                      <xsl:when test="string-length($showTitle)>0 and ($type='Book' or $type='BookSection' or $type='JournalArticle' or $type='ArticleInAPeriodical' or $type='ConferenceProceedings' or $type='Report')">
                        <i>
                          <xsl:value-of select="$title"/>
                        </i>
                      </xsl:when>
                      <xsl:when test="string-length($showTitle)>0">
                        <xsl:value-of select="$title"/>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:if>


                  <xsl:if test="not(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:NonUniqueMiddle) or string-length(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Author/b:Main/b:NameList/b:Person[1]/b:First)=0">



                    <xsl:if test="not(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:NonUniqueLastName) or string-length(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Author/b:Main/b:NameList/b:Person[1]/b:Middle)=0">

                      <xsl:if test="string-length(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Author/b:Main/b:NameList/b:Person[1]/b:Last)=0">

                        <xsl:if test="string-length(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Author/b:Main/b:NameList/b:Person[3]/b:Last)=0">
                          <xsl:if test="string-length(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Author/b:Main/b:NameList/b:Person[2]/b:Last)=0">

                            <xsl:if test="not(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:DoAndOther)">

                              <xsl:if test="string-length(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:ShortTitle)=0 and string-length(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Title)=0 ">

                                <xsl:value-of select="msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Source/b:Tag"/>

                              </xsl:if>

                            </xsl:if>
                          </xsl:if>

                        </xsl:if>

                      </xsl:if>
                    </xsl:if>
                  </xsl:if>



                </xsl:otherwise>
              </xsl:choose>



              <xsl:choose>
                <xsl:when test="msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Pages">
                  <xsl:if test="msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Volume">
                    <xsl:call-template name="templ_prop_Space"/>
                    <xsl:value-of select="msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Volume"/>
                    <xsl:call-template name="templ_prop_EnumSeparator"/>
                  </xsl:if>
                  <xsl:if test="not(msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Volume)">
                    <xsl:call-template name="templ_prop_Space"/>
                  </xsl:if>
                  <xsl:value-of select="msxsl:node-set($ListPopulatedWithMain)/b:Citation/b:Pages"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:if test="/b:Citation/b:Volume">
                    <xsl:call-template name="templ_prop_ListSeparator"/>
                    <xsl:call-template name="templ_str_VolumeShortUnCap"/>
                    <xsl:call-template name="templ_prop_Space"/>
                    <xsl:value-of select="/b:Citation/b:Volume"/>
                  </xsl:if>
                </xsl:otherwise>
              </xsl:choose>








              <xsl:if test="/b:Citation/b:PageSuffix">
                <xsl:value-of select="/b:Citation/b:PageSuffix"/>
              </xsl:if>

              <xsl:if test="/b:Citation/b:LastAuthor">
                <xsl:call-template name="templ_prop_CloseBracket"/>
              </xsl:if>
              <xsl:if test="not(/b:Citation/b:LastAuthor)">
                <xsl:call-template name="templ_prop_GroupSeparator"/>
              </xsl:if>


            </xsl:element>
          </body>
        </html>