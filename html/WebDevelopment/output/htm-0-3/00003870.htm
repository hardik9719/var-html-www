<html><head><title>Lintian::Collect::Source</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link rel="stylesheet" title="blkbluw" type="text/css" href="../../_blkbluw.css" media="all" >
<link rel="alternate stylesheet" title="blkmagw" type="text/css" href="../../_blkmagw.css" media="all" >
<link rel="alternate stylesheet" title="blkcynw" type="text/css" href="../../_blkcynw.css" media="all" >
<link rel="alternate stylesheet" title="whtprpk" type="text/css" href="../../_whtprpk.css" media="all" >
<link rel="alternate stylesheet" title="whtnavk" type="text/css" href="../../_whtnavk.css" media="all" >
<link rel="alternate stylesheet" title="grygrnk" type="text/css" href="../../_grygrnk.css" media="all" >
<link rel="alternate stylesheet" title="whtgrng" type="text/css" href="../../_whtgrng.css" media="all" >
<link rel="alternate stylesheet" title="blkgrng" type="text/css" href="../../_blkgrng.css" media="all" >
<link rel="alternate stylesheet" title="grygrnw" type="text/css" href="../../_grygrnw.css" media="all" >
<link rel="alternate stylesheet" title="blkbluw" type="text/css" href="../../_blkbluw.css" media="all" >
<link rel="alternate stylesheet" title="whtpurk" type="text/css" href="../../_whtpurk.css" media="all" >
<link rel="alternate stylesheet" title="whtgrng" type="text/css" href="../../_whtgrng.css" media="all" >
<link rel="alternate stylesheet" title="grygrnw" type="text/css" href="../../_grygrnw.css" media="all" >

<script type="text/javascript" src="../../_podly.js"></script>

</head>
<body class='pod'>

<!-- start doc -->
<p class="backlinktop"><b><a name="___top" href="../../index.html" accesskey="1" title="All Documents">&lt;&lt;</a></b></p>

<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#CLASS_METHODS'>CLASS METHODS</a>
  <li class='indexItem indexItem1'><a href='#INSTANCE_METHODS'>INSTANCE METHODS</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
</ul>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME</a></h1>

<p>Lintian::Collect::Source - Lintian interface to source package data collection</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS</a></h1>

<pre>    my ($name, $type, $dir) = (&#39;foobar&#39;, &#39;source&#39;, &#39;/path/to/lab-entry&#39;);
    my $collect = Lintian::Collect-&#62;new ($name, $type, $dir);
    if ($collect-&#62;native) {
        print &#34;Package is native\n&#34;;
    }</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION</a></h1>

<p>Lintian::Collect::Source provides an interface to package data for source packages. It implements data collection methods specific to source packages.</p>

<p>This module is in its infancy. Most of Lintian still reads all data from files in the laboratory whenever that data is needed and generates that data via collect scripts. The goal is to eventually access all data about source packages via this module so that the module can cache data where appropriate and possibly retire collect scripts in favor of caching that data in memory.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CLASS_METHODS"
>CLASS METHODS</a></h1>

<dl>
<dt><a name="new_(PACKAGE)"
>new (PACKAGE)</a></dt>

<dd>
<p>Creates a new Lintian::Collect::Source object. Currently, PACKAGE is ignored. Normally, this method should not be called directly, only via the Lintian::Collect constructor.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="INSTANCE_METHODS"
>INSTANCE METHODS</a></h1>

<p>In addition to the instance methods listed below, all instance methods documented in the <a href="../../Lintian/Collect.html" class="podlinkpod"
>Lintian::Collect</a> and <a href="../../Lintian/Collect/Package.html" class="podlinkpod"
>Lintian::Collect::Package</a> modules are also available.</p>

<dl>
<dt><a name="changelog"
>changelog</a></dt>

<dd>
<p>Returns the changelog of the source package as a Parse::DebianChangelog object, or <code>undef</code> if the changelog cannot be resolved safely.</p>

<p>Needs-Info requirements for using <i>changelog</i>: <a href="../../Lintian/Collect/Package.html#index_resolved_path(PATH)" class="podlinkpod"
>Same as index_resolved_path</a></p>

<dt><a name="diffstat"
>diffstat</a></dt>

<dd>
<p>Returns the path to diffstat output run on the Debian packaging diff (a.k.a. the &#34;diff.gz&#34;) for 1.0 non-native packages. For source packages without a &#34;diff.gz&#34; component, this returns the path to an empty file (this may be a device like /dev/null).</p>

<p>Needs-Info requirements for using <i>diffstat</i>: diffstat</p>

<dt><a name="native"
>native</a></dt>

<dd>
<p>Returns true if the source package is native and false otherwise. This is generally determined from the source format, though in the 1.0 case the nativeness is determined by looking for the diff.gz (using the name of the source package and its version).</p>

<p>If the source format is 1.0 and the version number is absent, this will return false (as native packages are a lot rarer than non-native ones).</p>

<p>Note if the source format is missing, it is assumed to be a 1.0 package.</p>

<p>Needs-Info requirements for using <i>native</i>: <a href="../../Lintian/Collect.html#field_(%5BFIELD%5B%2C_DEFAULT%5D%5D)" class="podlinkpod"
>Same as field</a></p>

<dt><a name="binaries"
>binaries</a></dt>

<dd>
<p>Returns a list of the binary and udeb packages listed in the <em>debian/control</em>. Package names appear the same order in the returned list as they do in the control file.</p>

<p><i>Note</i>: Package names that are not valid are silently ignored.</p>

<p>Needs-Info requirements for using <i>binaries</i>: <a href="#binary_package_type_(BINARY)" class="podlinkpod"
>Same as binary_package_type</a></p>

<dt><a name="binary_package_type_(BINARY)"
>binary_package_type (BINARY)</a></dt>

<dd>
<p>Returns package type based on value of the Package-Type (or if absent, X-Package-Type) field. If the field is omitted, the default value &#34;deb&#34; is used.</p>

<p>If the BINARY is not a binary listed in the source packages <em>debian/control</em> file, this method return <code>undef</code>.</p>

<p>Needs-Info requirements for using <i>binary_package_type</i>: <a href="#binary_field_(PACKAGE%5B%2C_FIELD%5B%2C_DEFAULT%5D%5D)" class="podlinkpod"
>Same as binary_field</a></p>

<dt><a name="source_field([FIELD[,_DEFAULT]])"
>source_field([FIELD[, DEFAULT]])</a></dt>

<dd>
<p>Returns the content of the field FIELD from source package paragraph of the <em>debian/control</em> file, or DEFAULT (defaulting to <code>undef</code>) if the field is not present. Only the literal value of the field is returned.</p>

<p>If FIELD is not given, return a hashref mapping field names to their values (in this case DEFAULT is ignored). This hashref should not be modified.</p>

<p>NB: If a field from the &#34;dsc&#34; file itself is desired, please use <a href="../../Lintian/Collect.html#field" class="podlinkpod"
>field</a> instead.</p>

<p>Needs-Info requirements for using <i>source_field</i>: <a href="../../Lintian/Collect/Package.html#index_resolved_path(PATH)" class="podlinkpod"
>Same as index_resolved_path</a></p>

<dt><a name="orig_index_(FILE)"
>orig_index (FILE)</a></dt>

<dd>
<p>Like <a href="#index" class="podlinkpod"
>&#34;index&#34;</a> except orig_index is based on the &#34;orig tarballs&#34; of the source packages.</p>

<p>For native packages <a href="#index" class="podlinkpod"
>&#34;index&#34;</a> and <a href="#orig_index" class="podlinkpod"
>&#34;orig_index&#34;</a> are generally identical.</p>

<p>NB: If sorted_index includes a debian packaging, it is was contained in upstream part of the source package (or the package is native).</p>

<p>Needs-Info requirements for using <i>orig_index</i>: src-orig-index</p>

<dt><a name="sorted_orig_index"
>sorted_orig_index</a></dt>

<dd>
<p>Like <a href="../../Lintian/Collect.html#sorted_index" class="podlinkpod"
>sorted_index</a> except sorted_orig_index is based on the &#34;orig tarballs&#34; of the source packages.</p>

<p>For native packages <a href="../../Lintian/Collect.html#sorted_index" class="podlinkpod"
>sorted_index</a> and <a href="#sorted_orig_index" class="podlinkpod"
>&#34;sorted_orig_index&#34;</a> are generally identical.</p>

<p>NB: If sorted_orig_index includes a debian packaging, it is was contained in upstream part of the source package (or the package is native).</p>

<p>Needs-Info requirements for using <i>sorted_orig_index</i>: <a href="#orig_index_(%5BFILE%5D)" class="podlinkpod"
>Same as orig_index</a></p>

<dt><a name="orig_index_resolved_path(PATH)"
>orig_index_resolved_path(PATH)</a></dt>

<dd>
<p>Resolve PATH (relative to the root of the package) and return the <a href="../../Lintian/Path.html" class="podlinkpod"
>entry</a> denoting the resolved path.</p>

<p>The resolution is done using <a href="../../Lintian/Path.html#resolve_path(%5BPATH%5D)" class="podlinkpod"
>resolve_path</a>.</p>

<p>NB: If orig_index_resolved_path includes a debian packaging, it is was contained in upstream part of the source package (or the package is native).</p>

<p>Needs-Info requirements for using <i>orig_index_resolved_path</i>: <a href="#orig_index_(FILE)" class="podlinkpod"
>Same as orig_index</a></p>

<dt><a name="binary_field_(PACKAGE[,_FIELD[,_DEFAULT]])"
>binary_field (PACKAGE[, FIELD[, DEFAULT]])</a></dt>

<dd>
<p>Returns the content of the field FIELD for the binary package PACKAGE in the <em>debian/control</em> file, or DEFAULT (defaulting to <code>undef</code>) if the field is not present. Inheritance of field values from the source section of the control file is not implemented. Only the literal value of the field is returned.</p>

<p>If FIELD is not given, return a hashref mapping field names to their values (in this case, DEFAULT is ignored). This hashref should not be modified.</p>

<p>If PACKAGE is not a binary built from this source, this returns DEFAULT.</p>

<p>Needs-Info requirements for using <i>binary_field</i>: <a href="../../Lintian/Collect/Package.html#index_resolved_path(PATH)" class="podlinkpod"
>Same as index_resolved_path</a></p>

<dt><a name="binary_relation_(PACKAGE,_FIELD)"
>binary_relation (PACKAGE, FIELD)</a></dt>

<dd>
<p>Returns a <a href="../../Lintian/Relation.html" class="podlinkpod"
>Lintian::Relation</a> object for the specified FIELD in the binary package PACKAGE in the <em>debian/control</em> file. FIELD should be one of the possible relationship fields of a Debian package or one of the following special values:</p>

<dl>
<dt><a name="all"
>all</a></dt>

<dd>
<p>The concatenation of Pre-Depends, Depends, Recommends, and Suggests.</p>

<dt><a name="strong"
>strong</a></dt>

<dd>
<p>The concatenation of Pre-Depends and Depends.</p>

<dt><a name="weak"
>weak</a></dt>

<dd>
<p>The concatenation of Recommends and Suggests.</p>
</dd>
</dl>

<p>If FIELD isn&#39;t present in the package, the returned Lintian::Relation object will be empty (always satisfied and implies nothing).</p>

<p>Any substvars in <em>debian/control</em> will be represented in the returned relation as packages named after the substvar.</p>

<p>Needs-Info requirements for using <i>binary_relation</i>: <a href="#binary_field_(PACKAGE%5B%2C_FIELD%5B%2C_DEFAULT%5D%5D)" class="podlinkpod"
>Same as binary_field</a></p>

<dt><a name="relation_(FIELD)"
>relation (FIELD)</a></dt>

<dd>
<p>Returns a <a href="../../Lintian/Relation.html" class="podlinkpod"
>Lintian::Relation</a> object for the given build relationship field FIELD. In addition to the normal build relationship fields, the following special field names are supported:</p>

<dl>
<dt><a name="build-depends-all"
>build-depends-all</a></dt>

<dd>
<p>The concatenation of Build-Depends, Build-Depends-Arch and Build-Depends-Indep.</p>

<dt><a name="build-conflicts-all"
>build-conflicts-all</a></dt>

<dd>
<p>The concatenation of Build-Conflicts, Build-Conflicts-Arch and Build-Conflicts-Indep.</p>
</dd>
</dl>

<p>If FIELD isn&#39;t present in the package, the returned Lintian::Relation object will be empty (always satisfied and implies nothing).</p>

<p>Needs-Info requirements for using <i>relation</i>: <a href="../../Lintian/Collect.html#field_(%5BFIELD%5B%2C_DEFAULT%5D%5D)" class="podlinkpod"
>Same as field</a></p>

<dt><a name="relation_noarch_(FIELD)"
>relation_noarch (FIELD)</a></dt>

<dd>
<p>The same as <a href="#relation_(FIELD)" class="podlinkpod"
>&#34;relation (FIELD)&#34;</a>, but ignores architecture restrictions and build profile restrictions in the FIELD field.</p>

<p>Needs-Info requirements for using <i>relation_noarch</i>: <a href="../../Lintian/Collect.html#relation_(FIELD)" class="podlinkpod"
>Same as relation</a></p>

<dt><a name="debfiles_([FILE])"
>debfiles ([FILE])</a></dt>

<dd>
<p><b>This method is deprecated</b>. Consider using <a href="../../Lintian/Collect/Package.html#index_resolved_path(PATH)" class="podlinkpod"
>index_resolved_path(PATH)</a> instead, which returns <a href="../../Lintian/Path.html" class="podlinkpod"
>Lintian::Path</a> objects.</p>

<p>Returns the path to FILE in the debian dir of the extracted source package. FILE must be relative to the root of the debian dir and should be without leading slash (and without &#34;./&#34;). If FILE is not in the debian dir, it returns the path to a non-existent file entry.</p>

<p>It is not permitted for FILE to be <code>undef</code>. If the &#34;root&#34; dir is desired either invoke this method without any arguments at all or use the empty string.</p>

<p>The caveats of <a href="../../Lintian/Collect/Package.html#unpacked_(%5BFILE%5D)" class="podlinkpod"
>unpacked</a> also apply to this method.</p>

<p>Needs-Info requirements for using <i>debfiles</i>: debfiles</p>

<dt><a name="index_(FILE)"
>index (FILE)</a></dt>

<dd>
<p>For the general documentation of this method, please refer to the documentation of it in <a href="../../Lintian/Collect/Package.html#index_(FILE)" class="podlinkpod"
>Lintian::Collect::Package</a>.</p>

<p>The index of a source package is not very well defined for non-native source packages. This method gives the index of the &#34;unpacked&#34; package (with 3.0 (quilt), this implies patches have been applied).</p>

<p>If you want the index of what is listed in the upstream orig tarballs, then there is <a href="#orig_index" class="podlinkpod"
>&#34;orig_index&#34;</a>.</p>

<p>For native packages, the two indices are generally the same as they only have one tarball and their debian packaging is included in that tarball.</p>

<p>IMPLEMENTATION DETAIL/CAVEAT: Lintian currently (2.5.11) generates this by running &#34;find(1)&#34; after unpacking the source package. This has three consequences.</p>

<p>First it means that (original) owner/group data is lost; Lintian inserts &#34;root/root&#34; here. This is usually not a problem as owner/group information for source packages do not really follow any standards.</p>

<p>Secondly, permissions are modified by A) umask and B) laboratory set{g,u}id bits (the laboratory on lintian.d.o has setgid). This is *not* corrected/altered. Note Lintian (usually) breaks if any of the &#34;user&#34; bits are set in the umask, so that part of the permission bit <i>should</i> be reliable.</p>

<p>Again, this shouldn&#39;t be a problem as permissions in source packages are usually not important. Though if accuracy is needed here, <a href="#orig_index" class="podlinkpod"
>&#34;orig_index&#34;</a> may used instead (assuming it has the file in question).</p>

<p>Third, hardlinking information is lost and no attempt has been made to restore it.</p>

<p>Needs-Info requirements for using <i>index</i>: unpacked</p>

<dt><a name="is_non_free"
>is_non_free</a></dt>

<dd>
<p>Returns a truth value if the package appears to be non-free (based on the section field; &#34;non-free/*&#34; and &#34;restricted/*&#34;)</p>

<p>Needs-Info requirements for using <i>is_non_free</i>: <a href="#source_field_(%5BFIELD%5B%2C_DEFAULT%5D%5D)" class="podlinkpod"
>&#34;source_field ([FIELD[, DEFAULT]])&#34;</a></p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR</a></h1>

<p>Originally written by Russ Allbery &#60;rra@debian.org&#62; for Lintian.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO</a></h1>

<p>lintian(1), Lintian::Collect(3), Lintian::Relation(3)</p>
<p class="backlinkbottom"><b><a name="___bottom" href="../../index.html" title="All Documents">&lt;&lt;</a></b></p>

<!-- end doc -->

</body></html>